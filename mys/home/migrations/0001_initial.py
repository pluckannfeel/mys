# Generated by Django 5.0.6 on 2024-06-27 00:48

import django.db.models.deletion
import modelcluster.fields
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0093_uploadedfile'),
        ('wagtailimages', '0026_delete_uploadedimage'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('header', wagtail.fields.RichTextField(blank=True)),
                ('carousel', wagtail.fields.StreamField([('slide', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.CharBlock(max_length=250, required=False))]))], blank=True)),
                ('sub_menu_sections', wagtail.fields.StreamField([('section', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(max_length=100, required=True)), ('body', wagtail.blocks.TextBlock(required=True))]))], blank=True)),
                ('slogan', wagtail.fields.StreamField([('slogan', wagtail.blocks.StructBlock([('top_image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('title', wagtail.blocks.CharBlock(required=True)), ('body', wagtail.blocks.RichTextBlock(required=True)), ('bottom_image', wagtail.images.blocks.ImageChooserBlock(required=True))]))], blank=True)),
                ('campaigns', wagtail.fields.StreamField([('campaign', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('title', wagtail.blocks.CharBlock(max_length=100, required=True)), ('details', wagtail.blocks.TextBlock(required=True))]))], blank=True)),
                ('blog_items', wagtail.fields.StreamField([('blog_item', wagtail.blocks.StructBlock([]))], blank=True)),
                ('footer', wagtail.fields.StreamField([('footer', wagtail.blocks.StructBlock([('logo', wagtail.images.blocks.ImageChooserBlock(required=True)), ('address', wagtail.blocks.RichTextBlock(required=True)), ('socials', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('icon', wagtail.blocks.CharBlock(max_length=50, required=True)), ('url', wagtail.blocks.URLBlock(required=True))]))), ('copyright', wagtail.blocks.RichTextBlock(required=True))]))], blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='NewsDetailPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('footer', wagtail.fields.StreamField([('footer', wagtail.blocks.StructBlock([('logo', wagtail.images.blocks.ImageChooserBlock(required=True)), ('address', wagtail.blocks.RichTextBlock(required=True)), ('socials', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('icon', wagtail.blocks.CharBlock(max_length=50, required=True)), ('url', wagtail.blocks.URLBlock(required=True))]))), ('copyright', wagtail.blocks.RichTextBlock(required=True))]))], blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='AccessPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('page_title_en', models.CharField(blank=True, max_length=255, verbose_name='Page Title (English)')),
                ('page_title_ja', models.CharField(blank=True, max_length=255, verbose_name='Page Title (Japanese)')),
                ('subtitle_en', wagtail.fields.RichTextField(blank=True, verbose_name='Subtitle (English)')),
                ('subtitle_ja', wagtail.fields.RichTextField(blank=True, verbose_name='Subtitle (Japanese)')),
                ('gallery', wagtail.fields.StreamField([('image', wagtail.images.blocks.ImageChooserBlock())], blank=True)),
                ('footer', wagtail.fields.StreamField([('footer', wagtail.blocks.StructBlock([('logo', wagtail.images.blocks.ImageChooserBlock(required=True)), ('address', wagtail.blocks.RichTextBlock(required=True)), ('socials', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('icon', wagtail.blocks.CharBlock(max_length=50, required=True)), ('url', wagtail.blocks.URLBlock(required=True))]))), ('copyright', wagtail.blocks.RichTextBlock(required=True))]))], blank=True)),
                ('jumbotron_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField(blank=True)),
                ('footer', wagtail.fields.StreamField([('footer', wagtail.blocks.StructBlock([('logo', wagtail.images.blocks.ImageChooserBlock(required=True)), ('address', wagtail.blocks.RichTextBlock(required=True)), ('socials', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('icon', wagtail.blocks.CharBlock(max_length=50, required=True)), ('url', wagtail.blocks.URLBlock(required=True))]))), ('copyright', wagtail.blocks.RichTextBlock(required=True))]))], blank=True)),
                ('jumbotron_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('date', models.DateField(verbose_name='Post date')),
                ('intro', models.CharField(max_length=250)),
                ('body', wagtail.fields.RichTextField(blank=True)),
                ('header_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_categories', to='home.blogpage')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='home.category')),
            ],
        ),
        migrations.AddField(
            model_name='blogpage',
            name='categories',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, through='home.BlogCategory', to='home.category'),
        ),
        migrations.CreateModel(
            name='CompanyPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('company_title_en', models.CharField(blank=True, max_length=255, verbose_name='Company Title (English)')),
                ('company_title_ja', models.CharField(blank=True, max_length=255, verbose_name='Company Title (Japanese)')),
                ('company_introduction_en', wagtail.fields.RichTextField(blank=True, verbose_name='Company Introduction (English)')),
                ('company_introduction_ja', wagtail.fields.RichTextField(blank=True, verbose_name='Company Introduction (Japanese)')),
                ('team_title_en', models.CharField(blank=True, max_length=255, verbose_name='Team Title (English)')),
                ('team_title_ja', models.CharField(blank=True, max_length=255, verbose_name='Team Title (Japanese)')),
                ('introduction_en', wagtail.fields.RichTextField(blank=True, verbose_name='Introduction (English)')),
                ('introduction_ja', wagtail.fields.RichTextField(blank=True, verbose_name='Introduction (Japanese)')),
                ('footer', wagtail.fields.StreamField([('footer', wagtail.blocks.StructBlock([('logo', wagtail.images.blocks.ImageChooserBlock(required=True)), ('address', wagtail.blocks.RichTextBlock(required=True)), ('socials', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('icon', wagtail.blocks.CharBlock(max_length=50, required=True)), ('url', wagtail.blocks.URLBlock(required=True))]))), ('copyright', wagtail.blocks.RichTextBlock(required=True))]))], blank=True)),
                ('jumbotron_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CompanyPhoto',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_photos', to='home.companypage')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewsPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField(blank=True)),
                ('news_items', wagtail.fields.StreamField([('news_item', wagtail.blocks.StructBlock([('date', wagtail.blocks.DateBlock(required=True)), ('title', wagtail.blocks.CharBlock(max_length=250, required=True)), ('slug', wagtail.blocks.CharBlock(max_length=250, required=True)), ('body', wagtail.blocks.RichTextBlock(required=True)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False))]))], blank=True)),
                ('footer', wagtail.fields.StreamField([('footer', wagtail.blocks.StructBlock([('logo', wagtail.images.blocks.ImageChooserBlock(required=True)), ('address', wagtail.blocks.RichTextBlock(required=True)), ('socials', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('icon', wagtail.blocks.CharBlock(max_length=50, required=True)), ('url', wagtail.blocks.URLBlock(required=True))]))), ('copyright', wagtail.blocks.RichTextBlock(required=True))]))], blank=True)),
                ('jumbotron_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('slogan_photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('role', models.CharField(max_length=255)),
                ('hover_photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='home.companypage')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]
